unit uCard;

interface

uses
  System.SysUtils, System.Classes;

const
  con_CardLastUsedate = 1;

type
  TCardChangePacket = procedure(Sender: TObject;  aCmd: integer;aCardNo:string; aData:string) of object;

  TCard = Class(TComponent)
  private
    FCOMPANYNAME: string;
    FCOMPANYCODE: string;
    FEMSEQ: integer;
    FEMNAME: string;
    FEMCODE: string;
    FCARDNO: string;
    FPOSINAME: string;
    FPOSICODE: string;
    FLastUseDate: string;
    FOnCardChangePacket: TCardChangePacket;
    FATUSE: string;
    FFDUSE: string;
    FPRINTNO: string;
    FLoadDate: string;
    FHandPhoneNum: string;
    procedure SetLastUseDate(const Value: string);
  published
    property CARDNO : string read FCARDNO write FCARDNO;
    property EMSEQ : integer read FEMSEQ write FEMSEQ;
    property EMCODE : string read FEMCODE write FEMCODE;
    property EMNAME : string read FEMNAME write FEMNAME;
    property COMPANYCODE : string read FCOMPANYCODE write FCOMPANYCODE;
    property COMPANYNAME : string read FCOMPANYNAME write FCOMPANYNAME;
    property POSICODE : string read FPOSICODE write FPOSICODE;
    property POSINAME : string read FPOSINAME write FPOSINAME;
    property PRINTNO : string read FPRINTNO write FPRINTNO;
    property HandPhoneNum : string read FHandPhoneNum write FHandPhoneNum;
    property LastUseDate : string read FLastUseDate write SetLastUseDate;
    property LoadDate : string read FLoadDate write FLoadDate;
    property ATUSE : string read FATUSE write FATUSE;
    property FDUSE : string read FFDUSE write FFDUSE;
  published
    property OnCardChangePacket : TCardChangePacket read FOnCardChangePacket write FOnCardChangePacket;
  End;

  TCardGrade = Class(TComponent)
  private
    FPermit: string;
    FDOOR2: string;
    FDOOR3: string;
    FDOOR1: string;
    FDOOR6: string;
    FDOOR7: string;
    FDOOR4: string;
    FDOOR5: string;
    FDOOR8: string;
  published
    property DOOR1 : string read FDOOR1 write FDOOR1;
    property DOOR2 : string read FDOOR2 write FDOOR2;
    property DOOR3 : string read FDOOR3 write FDOOR3;
    property DOOR4 : string read FDOOR4 write FDOOR4;
    property DOOR5 : string read FDOOR5 write FDOOR5;
    property DOOR6 : string read FDOOR6 write FDOOR6;
    property DOOR7 : string read FDOOR7 write FDOOR7;
    property DOOR8 : string read FDOOR8 write FDOOR8;
    property Permit : string read FPermit write FPermit;
  End;

  TdmCard = class(TDataModule)
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dmCard: TdmCard;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TCard }

procedure TCard.SetLastUseDate(const Value: string);
begin
  if FLastUseDate <> '' then
  begin
    if FLastUseDate >= Value then Exit;  //기존 날짜가 들어온 날짜보다 크거나 같으면 빠져 나간다.
  end;
  FLastUseDate := Value;

  if Assigned(FOnCardChangePacket) then
  begin
    OnCardChangePacket(Self,con_CardLastUsedate,CARDNO,Value);
  end;

end;

end.
