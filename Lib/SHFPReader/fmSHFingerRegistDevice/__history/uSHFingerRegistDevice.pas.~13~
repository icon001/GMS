unit uSHFingerRegistDevice;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, Buttons, DB, ADODB;

type
  TfmSHFingerRegistDevice = class(TForm)
    Panel1: TPanel;
    lb_Message: TLabel;
    Panel2: TPanel;
    btn_GetFPData: TSpeedButton;
    btn_Save: TSpeedButton;
    btn_Cancel: TSpeedButton;
    TempADOQuery: TADOQuery;
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure btn_SaveClick(Sender: TObject);
    procedure btn_CancelClick(Sender: TObject);
    procedure btn_GetFPDataClick(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure FormShow(Sender: TObject);
  private
    L_stDeviceMessage : string;
    L_stFingerData : string;
    FSave: Boolean;
    FFingerCardNo: string;
    FFingerUserID: string;
    FFingerTemplate1_2: string;
    FFingerTemplate1_1: string;
    { Private declarations }
    Function DupCheckCardNo(aCardNo:string):Boolean;
  public
    { Public declarations }
    property FingerUserID : string read FFingerUserID write FFingerUserID;
    property FingerCardNo : string read FFingerCardNo write FFingerCardNo;
    property FingerTemplate1_1 : string read FFingerTemplate1_1 write FFingerTemplate1_1;
    property FingerTemplate1_2 : string read FFingerTemplate1_2 write FFingerTemplate1_2;
    property Save : Boolean read FSave write FSave;
  end;

var
  fmSHFingerRegistDevice: TfmSHFingerRegistDevice;

implementation
uses
  uCommonFunction,
  uCommonVariable,
  uDataBase,
  uDBFunction,
  uSupremaServer;

{$R *.dfm}

procedure TfmSHFingerRegistDevice.FormCreate(Sender: TObject);
begin
  L_stDeviceMessage := '$DeviceIP 에서 $UserID 번지에 지문 등록후 가져오기 버튼을 클릭 하여 주세요.';
end;

procedure TfmSHFingerRegistDevice.FormShow(Sender: TObject);
var
  oFPNode : TSupremaServer;
  Tick: DWORD;
  NowTick: DWORD;
begin
  Try
    oFPNode := TSupremaServer.Create(nil);
    oFPNode.DEVICETYPE := '3'; //등록기 타입으로 동작하자.
    oFPNode.FingerDeviceID := G_nShFingerRegDeviceID;
    oFPNode.FNSEQ := 1;
    oFPNode.DEVICEIP := G_stShFingerRegDeviceIP;
    oFPNode.DEVICEPORT := inttostr(G_nShFingerRegDevicePort);
    oFPNode.DEVICENAME := '등록기';

    if Not oFPNode.Connected then oFPNode.SocketOPEN := False;
    oFPNode.SocketOPEN := True;

    Tick := GetTickCount + DWORD(3000);    //3초 동안 접속 하지 못하면 접속 실패이다.

    While Not oFPNode.Connected  do
    begin
      NowTick := GetTickCount;
      if Tick < NowTick then break;
      Application.ProcessMessages;
    end;

    if Not oFPNode.Connected then
    begin
      showmessage('지문리더 접속에 실패 하였습니다.');
      Exit;
    end;

    oFPNode.ApprovalNum_Send(G_nShFingerRegDeviceID,strtoint(FingerUserID));
  Finally
    oFPNode.SocketOPEN := False;
    oFPNode.Destroy;
    btn_GetFPData.Enabled := True;
  End;
end;

procedure TfmSHFingerRegistDevice.FormActivate(Sender: TObject);
var
  stMessage : string;
begin
  stMessage := StringReplace(L_stDeviceMessage,'$DeviceIP',G_stShFingerRegDeviceIP,[rfReplaceAll]);
  stMessage := StringReplace(stMessage,'$UserID',FillZeroStrNum(FingerUserID,G_nFPUserIDLength),[rfReplaceAll]);
  lb_Message.Caption := stMessage;
  
end;

procedure TfmSHFingerRegistDevice.btn_SaveClick(Sender: TObject);
begin
  Save := True;
  if FingerCardNo = '' then FingerCardNo := dmDBFunction.GetTB_CARD_FingerCardNo(FingerUserID);
  Close;
end;

procedure TfmSHFingerRegistDevice.btn_CancelClick(Sender: TObject);
begin
  Save := False;
  Close;
end;

procedure TfmSHFingerRegistDevice.btn_GetFPDataClick(Sender: TObject);
var
  oFPNode : TSupremaServer;
  Tick: DWORD;
  NowTick: DWORD;
begin
  Try
    btn_GetFPData.Enabled := False;
    btn_Save.Enabled := False;
    oFPNode := TSupremaServer.Create(nil);
    oFPNode.DEVICETYPE := '3'; //등록기 타입으로 동작하자.
    oFPNode.FingerDeviceID := G_nShFingerRegDeviceID;
    oFPNode.FNSEQ := 1;
    oFPNode.DEVICEIP := G_stShFingerRegDeviceIP;
    oFPNode.DEVICEPORT := inttostr(G_nShFingerRegDevicePort);
    oFPNode.DEVICENAME := '등록기';
    
    if Not oFPNode.Connected then oFPNode.SocketOPEN := False;
    oFPNode.SocketOPEN := True;

    Tick := GetTickCount + DWORD(3000);    //3초 동안 접속 하지 못하면 접속 실패이다.

    While Not oFPNode.Connected  do
    begin
      NowTick := GetTickCount;
      if Tick < NowTick then break;
      Application.ProcessMessages;
    end;

    if Not oFPNode.Connected then
    begin
      showmessage('지문리더 접속에 실패 하였습니다.');
      Exit;
    end;

    L_stFingerData := oFPNode.GetFPData(FingerUserID);
    if L_stFingerData = '' then
    begin
      showmessage('해당 번지의 지문을 가져오지 못했습니다..');
      Exit;
    end;
    btn_Save.Enabled := True;

  Finally
    oFPNode.SocketOPEN := False;
    oFPNode.Destroy;
    btn_GetFPData.Enabled := True;
  End;
end;


function TfmSHFingerRegistDevice.DupCheckCardNo(aCardNo: string): Boolean;
var
  stSql : string;
begin
  result := False;
  //지문 카드 중복유무
  stSql := ' Select * from TB_CARD where CA_CARDNO = ''' + aCardNo + ''' ';
  with TempADOQuery do
  begin
    close;
    Sql.Text := stSql;
    Try
      Open;
    Except
      Exit;
    End;
    if recordcount < 1 then Exit;
    result := True;
  end;
end;

procedure TfmSHFingerRegistDevice.FormCloseQuery(Sender: TObject;
  var CanClose: Boolean);
begin
  if (L_stFingerData <> '') and (Not Save) then
  begin
    if Application.MessageBox(PChar('지문데이터를 저장 하지 않았습니다.종료 하시겠습니까?'),'경고',MB_OKCANCEL) = ID_CANCEL  then
    begin
      CanClose := False;
    end;
  end;

end;

end.
